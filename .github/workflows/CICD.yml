name: CI/CD Pipeline of dqexec

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Setup dqlang access
        run: |
          mkdir -p  ~/.gradle && touch ~/.gradle/init.gradle
          echo "allprojects {
                   repositories {
                   maven {
                     url 'https://maven.pkg.github.com/dqualizer/dqlang'
                     credentials(HttpHeaderCredentials) {
                       name = 'authorization'
                       value = 'Bearer ${{ secrets.GITHUB_TOKEN }}'
                   }
                   authentication {
                       header(HttpHeaderAuthentication)
                   }
                 }}}" > ~/.gradle/init.gradle

      - name: Build with Gradle
        run: ./gradlew assemble

      - name: Test with Gradle
        run: ./gradlew test

      - name: Upload build jar
        uses: actions/upload-artifact@v3
        with:
          name: dqexec
          path: build/libs/*.jar
          retention-days: 14

  create_container:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
          tags: dqualizer/dqexec:latest
          build-args: |
            EXECUTION_ENV=ci
            GITHUB_PACKAGE_READ_TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max