name: CI/CD Pipeline of ${{ github.event.repository.name }}

on:
  push:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            --init-script gradle/init.gradle assemble
            assemble

      - name: Test with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            --init-script gradle/init.gradle test
            test        

      - name: Prepare Release
        if : github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            --init-script gradle/init.gradle prepareRelease
            release
            -Prelease.useAutomaticVersion=true

      - name: Distribute to GitHub Package Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            --init-script gradle/init.gradle publish
            publish


  create_container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main'}}
          tags: dqualizer/dqexec:latest
          build-args: |
            EXECUTION_ENV=ci
            GITHUB_PACKAGE_READ_TOKEN=${{ secrets.GITHUB_TOKEN }}
